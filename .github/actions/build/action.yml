name: 'Build .NET service'
description: 'Build .NET service'

inputs:
  service-name:
    description: Service name (used only for logging purposes)
    required: true
  project-path:
    description: Project path (relative to repository root)
    required: true
  dotnet-version:
    description: Version of target .NET SDK in format A.B.x (e.g. 8.0.x)
    required: true
  dotnet-quality:
    description: Specifies the quality in the channel.
      Latest build of the specified quality will be installed.
      The possible values of dotnet-quality are [daily, signed, validated, preview, ga].
    required: true

runs:
  using: 'composite'
  steps:
    - name: Build Info
      shell: bash
      run: echo "Building service ${{ inputs.service-name }} on path ${{ inputs.project-path }}"

    - name: Restore .NET SDK from Cache
      id: dotnet-restore-cache-step
      uses: actions/cache@v3
      if: runner.os == 'Linux'
      with:
        path: /usr/share/dotnet
        key: ${{ runner.os }}-dotnet-sdk-${{ inputs.dotnet-version }}
        restore-keys: ${{ runner.os }}-dotnet-sdk-

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      if: ${{ steps.dotnet-restore-cache-step.cache-hit != 'true' }}
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
        dotnet-quality: ${{ inputs.dotnet-quality }}

    - name: Check .NET SDK
      shell: bash
      run: |
        if [[ "${{ steps.dotnet-restore-cache-step.outputs.cache-hit }}" == 'true' ]]; then
          echo ".NET SDK ${{ inputs.dotnet-version }} was found in the cache."
          dotnet --version
        else
          echo ".NET SDK ${{ inputs.dotnet-version }} was not found in the cache. Setting up..."
        fi

    - name: Cache NuGet Packages
      uses: actions/cache@v3
      if: success()
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-nuget
        restore-keys: ${{ runner.os }}-dotnet-nuget

    - name: Restore .NET Tools
      shell: bash
      run: dotnet tool restore

    - name: Restore NuGet packages
      if: success()
      working-directory: ${{ inputs.project-path }}
      shell: bash
      run: dotnet restore

    - name: Build .NET Service
      if: success()
      working-directory: ${{ inputs.project-path }}
      shell: bash
      run: dotnet build -c Release --no-restore
