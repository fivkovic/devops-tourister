name: CI Workflow - Identity Service

on:
  workflow_dispatch:
  push:
    branches: ['main', 'dev']
    paths:
      - backend/src/Services/Identity/**
      - .github/workflows/ci-identity-service.yml

  pull_request:
    types: [opened, synchronize, reopened]
    branches: ['main', 'dev']
    paths:
      - backend/src/Services/Identity/**
      - .github/workflows/ci-identity-service.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  IDENTITY_SERVICE_NAME: 'Identity'
  IDENTITY_SERVICE_IMAGE_NAME: 'tourister-identity'
  SOLUTION_PATH: 'backend/src'
  PROJECT_PATH: 'backend/src/Services/Identity/src/Identity.API'
  TESTS_PATH: 'backend/src/Services/Identity/tests/'

jobs:
  build-test-analyze:
    name: üèóÔ∏è Build, Test, Run Code Analysis
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: üèóÔ∏è Build using composite action
        uses: ./.github/actions/build
        if: success()
        with:
          service-name: ${{ env.IDENTITY_SERVICE_NAME }}
          project-path: ${{ env.PROJECT_PATH }}
          solution-path: ${{ env.SOLUTION_PATH }}

      - name: üß™ Run tests using composite action
        uses: ./.github/actions/test
        if: success()
        with:
          service-name: ${{ env.IDENTITY_SERVICE_NAME }}
          tests-path: ${{ env.TESTS_PATH }}
          reports-path: ${{ github.workspace }}/**/*.cobertura.xml
          reports-output-path: ${{ github.workspace }}/output/test-results
          gh-token: ${{ secrets.GITHUB_TOKEN }}

      - name: üö• Run SonarCloud code analysis using composite action
        uses: ./.github/actions/run-code-analysis
        if: success()
        with:
          project-path: ${{ env.PROJECT_PATH }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          sonar-token: ${{ secrets.SONAR_TOKEN_IDENTITY_SERVICE }}
          sonar-organization-key: ${{ vars.SONAR_ORGANIZATION_KEY }}
          sonar-project-key: ${{ vars.SONAR_PROJECT_KEY_IDENTITY_SERVICE }}
          sonar-project-name: ${{ vars.SONAR_PROJECT_NAME_IDENTITY_SERVICE }}
          is-test-runner: ${{ vars.IS_TEST_RUNNER }}

  pre-release:
    name: üì¶ Create development release
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/dev' && github.event_name != 'pull_request' && success() }}
    needs: build-test-analyze
    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Create development release
        uses: ./.github/actions/pre-release
        with:
          image-name: ${{ env.IDENTITY_SERVICE_IMAGE_NAME }}
          dockerfile-path: 'backend/src/Services/Identity/Dockerfile.prod'
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: üì¶ Create stable release
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && success() }}
    needs: build-test-analyze
    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4
        
      - name: üì¶ Create Identity Service Stable Release
        uses: ./.github/actions/release
        with:
          image-name: ${{ env.IDENTITY_SERVICE_IMAGE_NAME }}
          dockerfile-path: 'backend/src/Services/Identity/Dockerfile.prod'
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
