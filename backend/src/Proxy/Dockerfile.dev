#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 80

ENV ASPNETCORE_URLS=http://+:80
ENV ASPNETCORE_ENVIRONMENT=Development

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release

WORKDIR /src
COPY ["src/nuget.config", "."]
COPY ["src/Directory.Build.props", "."]
COPY ["src/Directory.Packages.props", "."]

COPY ["src/Proxy/Directory.Build.props", "Proxy/"]
COPY ["src/Proxy/src/Proxy.csproj", "Proxy/src/"]
COPY ["src/Proxy/src/packages.lock.json", "Proxy/src/"]
RUN --mount=type=cache,id=proxy_nuget,target=/root/.nuget/packages \
	dotnet restore "Proxy/src/Proxy.csproj" --use-lock-file --locked-mode

COPY ["src/Proxy/src/", "Proxy/src/"]
RUN --mount=type=cache,id=proxy_nuget,target=/root/.nuget/packages \
	dotnet build "Proxy/src/Proxy.csproj" -c $BUILD_CONFIGURATION --no-restore

FROM build AS publish
RUN --mount=type=cache,id=proxy_nuget,target=/root/.nuget/packages \
	dotnet publish "Proxy/src/Proxy.csproj" -c $BUILD_CONFIGURATION --no-build -o /app/publish /p:UseAppHost=false
WORKDIR /
RUN rm -rf /root/.nuget /root/.local /root/.nuget/packages/*

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Proxy.dll"]